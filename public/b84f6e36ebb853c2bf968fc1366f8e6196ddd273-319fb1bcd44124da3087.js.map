{"version":3,"sources":["webpack:///./src/styles/content-container.module.scss","webpack:///./src/components/content-container.js","webpack:///./node_modules/chroma-js/chroma.js","webpack:///./src/styles/global.scss"],"names":["module","exports","textBoxOpacity","parseFloat","styles","TextBoxOpacity","TextBox","color","textColor","children","className","style","backgroundColor","chroma","alpha","undefined","ContentContainer","title","text","bgImage","backgroundImage","Text","defaultProps","BackgroundWhite","limit","x","min","max","classToType","i","list","length","name","toLowerCase","type","obj","Object","prototype","toString","call","PI","Math","utils","clip_rgb","rgb","_clipped","_unclipped","slice","unpack","args","keyOrder","Array","split","filter","k","map","last","l","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","this","constructor","mode","sorted","sort","a","b","p","chk","test","apply","Error","_rgb","push","hex","join","Color_1","Function","bind","concat","version","chroma_1","unpack$1","rgb2cmyk_1","ref","r","g","f","c","m","y","unpack$2","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css_1","hsla","unpack$5","rgb2hsl_1","s","h","Number","NaN","unpack$6","last$3","rgb2css_1","rgba","substr","unpack$7","round$1","hsl2rgb_1","assign","t3","t2","t1","h_","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg_1","delta","_g","unpack$a","floor","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex_1","u","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","parseInt","u$1","type$5","indexOf","unpack$d","sqrt","acos","rgb2hsi_1","min_","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb_1","isNaN","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsv","max_","unpack$i","floor$1","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","unpack$k","pow","rgb_xyz","xyz_lab","rgb2xyz","rgb2lab_1","ref$1","z","unpack$l","pow$1","xyz_rgb","lab_xyz","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch_1","unpack$o","rgb2lch_1","b_","unpack$p","sin","cos$1","lch2lab_1","unpack$q","lch2rgb_1","L","unpack$r","hcl2rgb_1","hcl","reverse","unpack$s","type$a","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","type$b","keys","n","unpack$t","rgb2num_1","type$c","num2rgb_1","num","type$d","unpack$u","type$e","round$5","log","temperature2rgb_1","kelvin","temp","unpack$v","round$6","rgb2temperature_1","minTemp","maxTemp","eps","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lch$1","c1","c2","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","_average_lrgb","colors","weights","xyz","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","t0","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","floor$2","random","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","sqrt$4","atan2$2","abs$1","cos$4","PI$2","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","average","reduce","w","first","shift","cnt","dx","dy","A","ci","xyz2","A$1","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","code","contrast","l1","l2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delC","delA","delB","v1","v2","distance","sum_sq","valid","factory"],"mappings":"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","file":"b84f6e36ebb853c2bf968fc1366f8e6196ddd273-319fb1bcd44124da3087.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundWhite\":\"#F9F9F9\",\"Blue\":\"#647B98\",\"Orange\":\"#EFA748\",\"Font\":\"Roboto,sans-serif\",\"TextBoxOpacity\":\".8\",\"container\":\"content-container-module--container--Plo3k\",\"ContentContainer\":\"content-container-module--ContentContainer--3RKVt\",\"TextBox\":\"content-container-module--TextBox--3ZaQ9\",\"Text\":\"content-container-module--Text--3yjyw\"};","import React from \"react\"\nimport chroma from \"chroma-js\"\nimport styles from '../styles/content-container.module.scss'\n\nconst sampleText = `\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam laoreet elementum vehicula. Sed sodales eu massa ut luctus. Suspendisse ultrices ante ut bibendum pulvinar. Donec lorem diam, luctus eu dapibus at, tincidunt vitae lorem. Sed venenatis finibus diam et facilisis. Fusce et erat malesuada, consequat lorem in, ultrices libero. Vestibulum quis pretium tortor, sit amet efficitur augue.\n`;\n  \nconst sampleTitle= `\n  Lorem ipsum?\n`;\n\nconst textBoxOpacity = parseFloat(styles.TextBoxOpacity);\n\nconst TextBox = ({ color, textColor, children }) => (\n  <div className={styles.TextBox} style={{ backgroundColor: chroma(color).alpha(textBoxOpacity), color: textColor == undefined ? \"black\" : textColor }}>\n    {children}\n  </div>\n);\n\nconst ContentContainer = ({title, text, color, textColor, bgImage}) => (\n  <div className={styles.ContentContainer} style={bgImage ? {backgroundImage: `url(${bgImage})`} : {}}>\n    <TextBox color={color} textColor={textColor}>\n      <div className={styles.Text}>\n        <h2>{title}</h2>\n        <p>{text}</p>\n      </div>\n    </TextBox>\n  </div>\n);\n\nContentContainer.defaultProps = {\n  title: sampleTitle,\n  text: sampleText,\n  color: styles.BackgroundWhite,\n  bgImage: null\n};\n\nexport default ContentContainer","require(\"core-js/modules/es7.object.values\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.chroma = factory();\n})(this, function () {\n  'use strict';\n\n  var limit = function limit(x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return x < min ? min : x > max ? max : x;\n  };\n\n  var clip_rgb = function clip_rgb(rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n\n        rgb[i] = limit(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit(rgb[i], 0, 1);\n      }\n    }\n\n    return rgb;\n  }; // ported from jQuery's $.type\n\n\n  var classToType = {};\n\n  for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n    var name = list[i];\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n\n  var type = function type(obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n\n  var unpack = function unpack(args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null; // if called with more than 3 arguments, we return the arguments\n\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n\n\n    if (type(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').filter(function (k) {\n        return args[0][k] !== undefined;\n      }).map(function (k) {\n        return args[0][k];\n      });\n    } // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n\n\n    return args[0];\n  };\n\n  var last = function last(args) {\n    if (args.length < 2) {\n      return null;\n    }\n\n    var l = args.length - 1;\n\n    if (type(args[l]) == 'string') {\n      return args[l].toLowerCase();\n    }\n\n    return null;\n  };\n\n  var PI = Math.PI;\n  var utils = {\n    clip_rgb: clip_rgb,\n    limit: limit,\n    type: type,\n    unpack: unpack,\n    last: last,\n    PI: PI,\n    TWOPI: PI * 2,\n    PITHIRD: PI / 3,\n    DEG2RAD: PI / 180,\n    RAD2DEG: 180 / PI\n  };\n  var input = {\n    format: {},\n    autodetect: []\n  };\n  var last$1 = utils.last;\n  var clip_rgb$1 = utils.clip_rgb;\n  var type$1 = utils.type;\n\n  var Color = function Color() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var me = this;\n\n    if (type$1(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    } // last argument could be the mode\n\n\n    var mode = last$1(args);\n    var autodetect = false;\n\n    if (!mode) {\n      autodetect = true;\n\n      if (!input.sorted) {\n        input.autodetect = input.autodetect.sort(function (a, b) {\n          return b.p - a.p;\n        });\n        input.sorted = true;\n      } // auto-detect format\n\n\n      for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n        mode = chk.test.apply(chk, args);\n\n        if (mode) {\n          break;\n        }\n      }\n    }\n\n    if (input.format[mode]) {\n      var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb$1(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    } // add alpha channel\n\n\n    if (me._rgb.length === 3) {\n      me._rgb.push(1);\n    }\n  };\n\n  Color.prototype.toString = function toString() {\n    if (type$1(this.hex) == 'function') {\n      return this.hex();\n    }\n\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n\n  var Color_1 = Color;\n\n  var chroma = function chroma() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(chroma.Color, [null].concat(args)))();\n  };\n\n  chroma.Color = Color_1;\n  chroma.version = '2.1.0';\n  var chroma_1 = chroma;\n  var unpack$1 = utils.unpack;\n  var max = Math.max;\n\n  var rgb2cmyk = function rgb2cmyk() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$1(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max(r, max(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  var rgb2cmyk_1 = rgb2cmyk;\n  var unpack$2 = utils.unpack;\n\n  var cmyk2rgb = function cmyk2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$2(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n\n    return [c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n    alpha];\n  };\n\n  var cmyk2rgb_1 = cmyk2rgb;\n  var unpack$3 = utils.unpack;\n  var type$2 = utils.type;\n\n  Color_1.prototype.cmyk = function () {\n    return rgb2cmyk_1(this._rgb);\n  };\n\n  chroma_1.cmyk = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['cmyk'])))();\n  };\n\n  input.format.cmyk = cmyk2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$3(args, 'cmyk');\n\n      if (type$2(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n  var unpack$4 = utils.unpack;\n  var last$2 = utils.last;\n\n  var rnd = function rnd(a) {\n    return Math.round(a * 100) / 100;\n  };\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n\n\n  var hsl2css = function hsl2css() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var hsla = unpack$4(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n\n  var hsl2css_1 = hsl2css;\n  var unpack$5 = utils.unpack;\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n\n  var rgb2hsl = function rgb2hsl() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$5(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var l = (max + min) / 2;\n    var s, h;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r == max) {\n      h = (g - b) / (max - min);\n    } else if (g == max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b == max) {\n      h = 4 + (r - g) / (max - min);\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    if (args.length > 3 && args[3] !== undefined) {\n      return [h, s, l, args[3]];\n    }\n\n    return [h, s, l];\n  };\n\n  var rgb2hsl_1 = rgb2hsl;\n  var unpack$6 = utils.unpack;\n  var last$3 = utils.last;\n  var round = Math.round;\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n\n  var rgb2css = function rgb2css() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgba = unpack$6(args, 'rgba');\n    var mode = last$3(args) || 'rgb';\n\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css_1(rgb2hsl_1(rgba), mode);\n    }\n\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n\n  var rgb2css_1 = rgb2css;\n  var unpack$7 = utils.unpack;\n  var round$1 = Math.round;\n\n  var hsl2rgb = function hsl2rgb() {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$7(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n\n      assign = [round$1(c[0] * 255), round$1(c[1] * 255), round$1(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var hsl2rgb_1 = hsl2rgb;\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var round$2 = Math.round;\n\n  var css2rgb = function css2rgb(css) {\n    css = css.toLowerCase().trim();\n    var m;\n\n    if (input.format.named) {\n      try {\n        return input.format.named(css);\n      } catch (e) {// eslint-disable-next-line\n      }\n    } // rgb(250,20,0)\n\n\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n\n      rgb[3] = 1; // default alpha\n\n      return rgb;\n    } // rgba(250,20,0,0.4)\n\n\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n\n      return rgb$1;\n    } // rgb(100%,0%,0%)\n\n\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n      }\n\n      rgb$2[3] = 1; // default alpha\n\n      return rgb$2;\n    } // rgba(100%,0%,0%,0.4)\n\n\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n      }\n\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    } // hsl(0,100%,50%)\n\n\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb_1(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    } // hsla(0,100%,50%,0.5)\n\n\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb_1(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n\n      return rgb$5;\n    }\n  };\n\n  css2rgb.test = function (s) {\n    return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s);\n  };\n\n  var css2rgb_1 = css2rgb;\n  var type$3 = utils.type;\n\n  Color_1.prototype.css = function (mode) {\n    return rgb2css_1(this._rgb, mode);\n  };\n\n  chroma_1.css = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['css'])))();\n  };\n\n  input.format.css = css2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n        return 'css';\n      }\n    }\n  });\n  var unpack$8 = utils.unpack;\n\n  input.format.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgb = unpack$8(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n\n  chroma_1.gl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['gl'])))();\n  };\n\n  Color_1.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  var unpack$9 = utils.unpack;\n\n  var rgb2hcg = function rgb2hcg() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$9(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n\n    var _g = min / (255 - delta) * 100;\n\n    var h;\n\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, c, _g];\n  };\n\n  var rgb2hcg_1 = rgb2hcg;\n  var unpack$a = utils.unpack;\n  var floor = Math.floor;\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function hcg2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$a(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n\n    var _c = c * 255;\n\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hcg2rgb_1 = hcg2rgb;\n  var unpack$b = utils.unpack;\n  var type$4 = utils.type;\n\n  Color_1.prototype.hcg = function () {\n    return rgb2hcg_1(this._rgb);\n  };\n\n  chroma_1.hcg = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcg'])))();\n  };\n\n  input.format.hcg = hcg2rgb_1;\n  input.autodetect.push({\n    p: 1,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$b(args, 'hcg');\n\n      if (type$4(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n  var unpack$c = utils.unpack;\n  var last$4 = utils.last;\n  var round$3 = Math.round;\n\n  var rgb2hex = function rgb2hex() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$c(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last$4(args) || 'auto';\n\n    if (a === undefined) {\n      a = 1;\n    }\n\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n\n    switch (mode.toLowerCase()) {\n      case 'rgba':\n        return \"#\" + str + hxa;\n\n      case 'argb':\n        return \"#\" + hxa + str;\n\n      default:\n        return \"#\" + str;\n    }\n  };\n\n  var rgb2hex_1 = rgb2hex;\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n  var hex2rgb = function hex2rgb(hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      } // expand short-notation to full six-digit\n\n\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    } // match rgba hex format, eg #FF000077\n\n\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      } // expand short-notation to full eight-digit\n\n\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    } // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n\n  var hex2rgb_1 = hex2rgb;\n  var type$5 = utils.type;\n\n  Color_1.prototype.hex = function (mode) {\n    return rgb2hex_1(this._rgb, mode);\n  };\n\n  chroma_1.hex = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hex'])))();\n  };\n\n  input.format.hex = hex2rgb_1;\n  input.autodetect.push({\n    p: 4,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$5(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n  var unpack$d = utils.unpack;\n  var TWOPI = utils.TWOPI;\n  var min = Math.min;\n  var sqrt = Math.sqrt;\n  var acos = Math.acos;\n\n  var rgb2hsi = function rgb2hsi() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n\n    var ref = unpack$d(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n\n      if (b > g) {\n        h = TWOPI - h;\n      }\n\n      h /= TWOPI;\n    }\n\n    return [h * 360, s, i];\n  };\n\n  var rgb2hsi_1 = rgb2hsi;\n  var unpack$e = utils.unpack;\n  var limit$1 = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos = Math.cos;\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n\n  var hsi2rgb = function hsi2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n\n    args = unpack$e(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    if (isNaN(s)) {\n      s = 0;\n    } // normalize hue\n\n\n    if (h > 360) {\n      h -= 360;\n    }\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    h /= 360;\n\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n\n    r = limit$1(i * r * 3);\n    g = limit$1(i * g * 3);\n    b = limit$1(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsi2rgb_1 = hsi2rgb;\n  var unpack$f = utils.unpack;\n  var type$6 = utils.type;\n\n  Color_1.prototype.hsi = function () {\n    return rgb2hsi_1(this._rgb);\n  };\n\n  chroma_1.hsi = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsi'])))();\n  };\n\n  input.format.hsi = hsi2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$f(args, 'hsi');\n\n      if (type$6(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n  var unpack$g = utils.unpack;\n  var type$7 = utils.type;\n\n  Color_1.prototype.hsl = function () {\n    return rgb2hsl_1(this._rgb);\n  };\n\n  chroma_1.hsl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsl'])))();\n  };\n\n  input.format.hsl = hsl2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$g(args, 'hsl');\n\n      if (type$7(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n  var unpack$h = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n\n  var rgb2hsl$1 = function rgb2hsl$1() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$h(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n\n      if (r === max_) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max_) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max_) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, s, v];\n  };\n\n  var rgb2hsv = rgb2hsl$1;\n  var unpack$i = utils.unpack;\n  var floor$1 = Math.floor;\n\n  var hsv2rgb = function hsv2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$i(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      var i = floor$1(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsv2rgb_1 = hsv2rgb;\n  var unpack$j = utils.unpack;\n  var type$8 = utils.type;\n\n  Color_1.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  chroma_1.hsv = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsv'])))();\n  };\n\n  input.format.hsv = hsv2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$j(args, 'hsv');\n\n      if (type$8(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    // 4 / 29\n    t1: 0.206896552,\n    // 6 / 29\n    t2: 0.12841855,\n    // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n\n  };\n  var unpack$k = utils.unpack;\n  var pow = Math.pow;\n\n  var rgb2lab = function rgb2lab() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$k(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n\n  var rgb_xyz = function rgb_xyz(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    }\n\n    return pow((r + 0.055) / 1.055, 2.4);\n  };\n\n  var xyz_lab = function xyz_lab(t) {\n    if (t > labConstants.t3) {\n      return pow(t, 1 / 3);\n    }\n\n    return t / labConstants.t2 + labConstants.t0;\n  };\n\n  var rgb2xyz = function rgb2xyz(r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n    return [x, y, z];\n  };\n\n  var rgb2lab_1 = rgb2lab;\n  var unpack$l = utils.unpack;\n  var pow$1 = Math.pow;\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n\n  var lab2rgb = function lab2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$l(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = labConstants.Yn * lab_xyz(y);\n    x = labConstants.Xn * lab_xyz(x);\n    z = labConstants.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n\n  var xyz_rgb = function xyz_rgb(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055);\n  };\n\n  var lab_xyz = function lab_xyz(t) {\n    return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0);\n  };\n\n  var lab2rgb_1 = lab2rgb;\n  var unpack$m = utils.unpack;\n  var type$9 = utils.type;\n\n  Color_1.prototype.lab = function () {\n    return rgb2lab_1(this._rgb);\n  };\n\n  chroma_1.lab = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lab'])))();\n  };\n\n  input.format.lab = lab2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$m(args, 'lab');\n\n      if (type$9(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n  var unpack$n = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$1 = Math.sqrt;\n  var atan2 = Math.atan2;\n  var round$4 = Math.round;\n\n  var lab2lch = function lab2lch() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$n(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$1(a * a + b * b);\n    var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n\n    if (round$4(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n\n    return [l, c, h];\n  };\n\n  var lab2lch_1 = lab2lch;\n  var unpack$o = utils.unpack;\n\n  var rgb2lch = function rgb2lch() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$o(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab_1(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch_1(l, a, b_);\n  };\n\n  var rgb2lch_1 = rgb2lch;\n  var unpack$p = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin = Math.sin;\n  var cos$1 = Math.cos;\n\n  var lch2lab = function lch2lab() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n\n\n    var ref = unpack$p(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    h = h * DEG2RAD;\n    return [l, cos$1(h) * c, sin(h) * c];\n  };\n\n  var lch2lab_1 = lch2lab;\n  var unpack$q = utils.unpack;\n\n  var lch2rgb = function lch2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    args = unpack$q(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab_1(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb_1(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var lch2rgb_1 = lch2rgb;\n  var unpack$r = utils.unpack;\n\n  var hcl2rgb = function hcl2rgb() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var hcl = unpack$r(args, 'hcl').reverse();\n    return lch2rgb_1.apply(void 0, hcl);\n  };\n\n  var hcl2rgb_1 = hcl2rgb;\n  var unpack$s = utils.unpack;\n  var type$a = utils.type;\n\n  Color_1.prototype.lch = function () {\n    return rgb2lch_1(this._rgb);\n  };\n\n  Color_1.prototype.hcl = function () {\n    return rgb2lch_1(this._rgb).reverse();\n  };\n\n  chroma_1.lch = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lch'])))();\n  };\n\n  chroma_1.hcl = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcl'])))();\n  };\n\n  input.format.lch = lch2rgb_1;\n  input.format.hcl = hcl2rgb_1;\n  ['lch', 'hcl'].forEach(function (m) {\n    return input.autodetect.push({\n      p: 2,\n      test: function test() {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) {\n          args[len] = arguments[len];\n        }\n\n        args = unpack$s(args, m);\n\n        if (type$a(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });\n  });\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n  var w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  var w3cx11_1 = w3cx11;\n  var type$b = utils.type;\n\n  Color_1.prototype.name = function () {\n    var hex = rgb2hex_1(this._rgb, 'rgb');\n\n    for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n      var n = list[i];\n\n      if (w3cx11_1[n] === hex) {\n        return n.toLowerCase();\n      }\n    }\n\n    return hex;\n  };\n\n  input.format.named = function (name) {\n    name = name.toLowerCase();\n\n    if (w3cx11_1[name]) {\n      return hex2rgb_1(w3cx11_1[name]);\n    }\n\n    throw new Error('unknown color name: ' + name);\n  };\n\n  input.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        rest[len] = arguments[len + 1];\n      }\n\n      if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n  var unpack$t = utils.unpack;\n\n  var rgb2num = function rgb2num() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = unpack$t(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  var rgb2num_1 = rgb2num;\n  var type$c = utils.type;\n\n  var num2rgb = function num2rgb(num) {\n    if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    throw new Error(\"unknown num color: \" + num);\n  };\n\n  var num2rgb_1 = num2rgb;\n  var type$d = utils.type;\n\n  Color_1.prototype.num = function () {\n    return rgb2num_1(this._rgb);\n  };\n\n  chroma_1.num = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['num'])))();\n  };\n\n  input.format.num = num2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n  var unpack$u = utils.unpack;\n  var type$e = utils.type;\n  var round$5 = Math.round;\n\n  Color_1.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    if (rnd === false) {\n      return this._rgb.slice(0, 3);\n    }\n\n    return this._rgb.slice(0, 3).map(round$5);\n  };\n\n  Color_1.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$5(v) : v;\n    });\n  };\n\n  chroma_1.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['rgb'])))();\n  };\n\n  input.format.rgb = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgba = unpack$u(args, 'rgba');\n\n    if (rgba[3] === undefined) {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  };\n\n  input.autodetect.push({\n    p: 3,\n    test: function test() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      args = unpack$u(args, 'rgba');\n\n      if (type$e(args) === 'array' && (args.length === 3 || args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log = Math.log;\n\n  var temperature2rgb = function temperature2rgb(kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n\n    return [r, g, b, 1];\n  };\n\n  var temperature2rgb_1 = temperature2rgb;\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var unpack$v = utils.unpack;\n  var round$6 = Math.round;\n\n  var rgb2temperature = function rgb2temperature() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var rgb = unpack$v(args, 'rgb');\n    var r = rgb[0],\n        b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb_1(temp);\n\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return round$6(temp);\n  };\n\n  var rgb2temperature_1 = rgb2temperature;\n\n  Color_1.prototype.temp = Color_1.prototype.kelvin = Color_1.prototype.temperature = function () {\n    return rgb2temperature_1(this._rgb);\n  };\n\n  chroma_1.temp = chroma_1.kelvin = chroma_1.temperature = function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['temp'])))();\n  };\n\n  input.format.temp = input.format.kelvin = input.format.temperature = temperature2rgb_1;\n  var type$f = utils.type;\n\n  Color_1.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    if (a !== undefined && type$f(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n\n      return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n\n    return this._rgb[3];\n  };\n\n  Color_1.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  Color_1.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= labConstants.Kn * amount;\n    return new Color_1(lab, 'lab').alpha(me.alpha(), true);\n  };\n\n  Color_1.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.darken(-amount);\n  };\n\n  Color_1.prototype.darker = Color_1.prototype.darken;\n  Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n  Color_1.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        return src[i];\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var type$g = utils.type;\n  var pow$2 = Math.pow;\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n\n  Color_1.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$g(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color_1([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n\n      if (lum === 1) {\n        // return pure white\n        return new Color_1([255, 255, 255, this._rgb[3]], 'rgb');\n      } // compute new color using...\n\n\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n\n      var test = function test(low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n\n      var rgb = (cur_lum > lum ? test(new Color_1([0, 0, 0]), this) : test(this, new Color_1([255, 255, 255]))).rgb();\n      return new Color_1(rgb.concat([this._rgb[3]]));\n    }\n\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n\n  var rgb2luminance = function rgb2luminance(r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  var luminance_x = function luminance_x(x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$2((x + 0.055) / 1.055, 2.4);\n  };\n\n  var interpolator = {};\n  var type$h = utils.type;\n\n  var mix = function mix(col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 3;\n\n    while (len-- > 0) {\n      rest[len] = arguments[len + 3];\n    }\n\n    var mode = rest[0] || 'lrgb';\n\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n\n    if (type$h(col1) !== 'object') {\n      col1 = new Color_1(col1);\n    }\n\n    if (type$h(col2) !== 'object') {\n      col2 = new Color_1(col2);\n    }\n\n    return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  Color_1.prototype.mix = Color_1.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n        len = arguments.length - 2;\n\n    while (len-- > 0) {\n      rest[len] = arguments[len + 2];\n    }\n\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n\n  Color_1.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n    var rgb = this._rgb;\n    var a = rgb[3];\n\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color_1([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n\n  Color_1.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lch = me.lch();\n    lch[1] += labConstants.Kn * amount;\n\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n\n    return new Color_1(lch, 'lch').alpha(me.alpha(), true);\n  };\n\n  Color_1.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.saturate(-amount);\n  };\n\n  var type$i = utils.type;\n\n  Color_1.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n\n    if (channel) {\n      var i = mode.indexOf(channel);\n\n      if (i > -1) {\n        if (type$i(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n\n            case '-':\n              src[i] += +value;\n              break;\n\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n\n            default:\n              src[i] = +value;\n          }\n        } else if (type$i(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n\n        var out = new Color_1(src, mode);\n\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n\n        return out;\n      }\n\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var rgb$1 = function rgb$1(col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb');\n  }; // register interpolator\n\n\n  interpolator.rgb = rgb$1;\n  var sqrt$2 = Math.sqrt;\n  var pow$3 = Math.pow;\n\n  var lrgb = function lrgb(col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color_1(sqrt$2(pow$3(x1, 2) * (1 - f) + pow$3(x2, 2) * f), sqrt$2(pow$3(y1, 2) * (1 - f) + pow$3(y2, 2) * f), sqrt$2(pow$3(z1, 2) * (1 - f) + pow$3(z2, 2) * f), 'rgb');\n  }; // register interpolator\n\n\n  interpolator.lrgb = lrgb;\n\n  var lab$1 = function lab$1(col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab');\n  }; // register interpolator\n\n\n  interpolator.lab = lab$1;\n\n  var _hsx = function _hsx(col1, col2, f, m) {\n    var assign, assign$1;\n    var xyz0, xyz1;\n\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n\n    if (m.substr(0, 1) === 'h') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n\n    var sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat === undefined) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return new Color_1([hue, sat, lbv], m);\n  };\n\n  var lch$1 = function lch$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'lch');\n  }; // register interpolator\n\n\n  interpolator.lch = lch$1;\n  interpolator.hcl = lch$1;\n\n  var num$1 = function num$1(col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color_1(c1 + f * (c2 - c1), 'num');\n  }; // register interpolator\n\n\n  interpolator.num = num$1;\n\n  var hcg$1 = function hcg$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hcg');\n  }; // register interpolator\n\n\n  interpolator.hcg = hcg$1;\n\n  var hsi$1 = function hsi$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsi');\n  }; // register interpolator\n\n\n  interpolator.hsi = hsi$1;\n\n  var hsl$1 = function hsl$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsl');\n  }; // register interpolator\n\n\n  interpolator.hsl = hsl$1;\n\n  var hsv$1 = function hsv$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsv');\n  }; // register interpolator\n\n\n  interpolator.hsv = hsv$1;\n  var clip_rgb$2 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$3 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$1 = Math.sin;\n  var atan2$1 = Math.atan2;\n\n  var average = function average(colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n    var l = colors.length;\n\n    if (!weights) {\n      weights = Array.from(new Array(l)).map(function () {\n        return 1;\n      });\n    } // normalize weights\n\n\n    var k = l / weights.reduce(function (a, b) {\n      return a + b;\n    });\n    weights.forEach(function (w, i) {\n      weights[i] *= k;\n    }); // convert colors to Color objects\n\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0; // initial color\n\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$1(A) * weights[0];\n      }\n    }\n\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$1(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n\n        while (A$1 < 0) {\n          A$1 += 360;\n        }\n\n        while (A$1 >= 360) {\n          A$1 -= 360;\n        }\n\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n\n    alpha /= l;\n    return new Color_1(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n\n  var _average_lrgb = function _average_lrgb(colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n\n    xyz[0] = sqrt$3(xyz[0]);\n    xyz[1] = sqrt$3(xyz[1]);\n    xyz[2] = sqrt$3(xyz[2]);\n\n    if (xyz[3] > 0.9999999) {\n      xyz[3] = 1;\n    }\n\n    return new Color_1(clip_rgb$2(xyz));\n  }; // minimal multi-purpose interface\n  // @requires utils color analyze\n\n\n  var type$j = utils.type;\n  var pow$5 = Math.pow;\n\n  var scale = function scale(colors) {\n    // constructor\n    var _mode = 'rgb';\n\n    var _nacol = chroma_1('#ccc');\n\n    var _spread = 0; // const _fixed = false;\n\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1; // private methods\n\n    var setColors = function setColors(colors) {\n      colors = colors || ['#fff', '#000'];\n\n      if (colors && type$j(colors) === 'string' && chroma_1.brewer && chroma_1.brewer[colors.toLowerCase()]) {\n        colors = chroma_1.brewer[colors.toLowerCase()];\n      }\n\n      if (type$j(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        } // make a copy of the colors\n\n\n        colors = colors.slice(0); // convert to chroma classes\n\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma_1(colors[c]);\n        } // auto-fill color position\n\n\n        _pos.length = 0;\n\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n\n      resetCache();\n      return _colors = colors;\n    };\n\n    var getClass = function getClass(value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n\n        return i - 1;\n      }\n\n      return 0;\n    };\n\n    var tMapLightness = function tMapLightness(t) {\n      return t;\n    };\n\n    var tMapDomain = function tMapDomain(t) {\n      return t;\n    }; // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n\n    var getColor = function getColor(val, bypassMap) {\n      var col, t;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      } // domain map\n\n\n      t = tMapDomain(t);\n\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {\n        t = pow$5(t, _gamma);\n      }\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      var k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$j(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma_1.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$j(_colors) === 'function') {\n          col = _colors(t);\n        }\n\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n\n      return col;\n    };\n\n    var resetCache = function resetCache() {\n      return _colorCache = {};\n    };\n\n    setColors(colors); // public interface\n\n    var f = function f(v) {\n      var c = chroma_1(getColor(v));\n\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$j(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma_1.analyze(_domain);\n\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma_1.limits(d, 'e', classes);\n          }\n        }\n\n        return f;\n      }\n\n      return _classes;\n    };\n\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {\n            return i / (domain.length - 1);\n          });\n          var tBreaks = domain.map(function (d) {\n            return (d - _min) / (_max - _min);\n          });\n\n          if (!tBreaks.every(function (val, i) {\n            return tOut[i] === val;\n          })) {\n            tMapDomain = function tMapDomain(t) {\n              if (t <= 0 || t >= 1) {\n                return t;\n              }\n\n              var i = 0;\n\n              while (t >= tBreaks[i + 1]) {\n                i++;\n              }\n\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n        }\n      }\n\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n\n      _correctLightness = v;\n      resetCache();\n\n      if (_correctLightness) {\n        tMapLightness = function tMapLightness(t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n\n          return t;\n        };\n      } else {\n        tMapLightness = function tMapLightness(t) {\n          return t;\n        };\n      }\n\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$j(p) === 'number') {\n          p = [p, p];\n        }\n\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n\n      var result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        // returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n\n      if (chroma_1[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma_1(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n\n    return range;\n  } //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n  // @requires utils lab\n\n\n  var bezier = function bezier(colors) {\n    var assign, assign$1, assign$2;\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign[0], lab1 = assign[1];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return lab0[i] + t * (lab1[i] - lab0[i]);\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 5) {\n      var I0 = bezier(colors.slice(0, 3));\n      var I1 = bezier(colors.slice(2, 5));\n\n      I = function I(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n\n    return I;\n  };\n\n  var bezier_1 = function bezier_1(colors) {\n    var f = bezier(colors);\n\n    f.scale = function () {\n      return scale(f);\n    };\n\n    return f;\n  };\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n\n  var blend = function blend(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n\n    return blend[mode](bottom, top);\n  };\n\n  var blend_f = function blend_f(f) {\n    return function (bottom, top) {\n      var c0 = chroma_1(top).rgb();\n      var c1 = chroma_1(bottom).rgb();\n      return chroma_1.rgb(f(c0, c1));\n    };\n  };\n\n  var each = function each(f) {\n    return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };\n  };\n\n  var normal = function normal(a) {\n    return a;\n  };\n\n  var multiply = function multiply(a, b) {\n    return a * b / 255;\n  };\n\n  var darken$1 = function darken$1(a, b) {\n    return a > b ? b : a;\n  };\n\n  var lighten = function lighten(a, b) {\n    return a > b ? a : b;\n  };\n\n  var screen = function screen(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  var overlay = function overlay(a, b) {\n    return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n  };\n\n  var burn = function burn(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  var dodge = function dodge(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  }; // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken$1));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn)); // blend.add = blend_f(each(add));\n\n  var blend_1 = blend; // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$k = utils.type;\n  var clip_rgb$3 = utils.clip_rgb;\n  var TWOPI$2 = utils.TWOPI;\n  var pow$6 = Math.pow;\n  var sin$2 = Math.sin;\n  var cos$3 = Math.cos;\n\n  var cubehelix = function cubehelix(start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n    var dh = 0,\n        dl;\n\n    if (type$k(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    var f = function f(fract) {\n      var a = TWOPI$2 * ((start + 120) / 360 + rotations * fract);\n      var l = pow$6(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$3(a);\n      var sin_a = sin$2(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma_1(clip_rgb$3([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n\n      hue = h;\n\n      if (type$k(hue) === 'array') {\n        dh = hue[1] - hue[0];\n\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n\n      if (type$k(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n\n      return f;\n    };\n\n    f.scale = function () {\n      return chroma_1.scale(f);\n    };\n\n    f.hue(hue);\n    return f;\n  };\n\n  var digits = '0123456789abcdef';\n  var floor$2 = Math.floor;\n  var random = Math.random;\n\n  var random_1 = function random_1() {\n    var code = '#';\n\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$2(random() * 16));\n    }\n\n    return new Color_1(code, 'hex');\n  };\n\n  var log$1 = Math.log;\n  var pow$7 = Math.pow;\n  var floor$3 = Math.floor;\n  var abs = Math.abs;\n\n  var analyze = function analyze(data, key) {\n    if (key === void 0) key = null;\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {\n        val = val[key];\n      }\n\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    });\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  var limits = function limits(data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (num === 1) {\n      return [min, max];\n    }\n\n    var limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n      // continuous\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n      // equal interval\n      limits.push(min);\n\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      // log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n\n      var min_log = Math.LOG10E * log$1(min);\n      var max_log = Math.LOG10E * log$1(max);\n      limits.push(min);\n\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$7(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      // quantile scale\n      limits.push(min);\n\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor$3(p);\n\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          // p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      // k-means clustering\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null; // get seed values\n\n      centroids = [];\n      centroids.push(min);\n\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n\n      centroids.push(max);\n\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs(centroids[j$1] - value);\n\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        } // update centroids step\n\n\n        var newCentroids = new Array(num);\n\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        } // check convergence\n\n\n        repeat = false;\n\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      } // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n\n\n      var kClusters = {};\n\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n\n      var tmpKMeansBreaks = [];\n\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n\n    return limits;\n  };\n\n  var analyze_1 = {\n    analyze: analyze,\n    limits: limits\n  };\n\n  var contrast = function contrast(a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n\n  var sqrt$4 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var abs$1 = Math.abs;\n  var cos$4 = Math.cos;\n  var PI$2 = Math.PI;\n\n  var deltaE = function deltaE(a, b, L, C) {\n    if (L === void 0) L = 1;\n    if (C === void 0) C = 1; // Delta E (CMC)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var c1 = sqrt$4(a1 * a1 + b1 * b1);\n    var c2 = sqrt$4(a2 * a2 + b2 * b2);\n    var sl = L1 < 16.0 ? 0.511 : 0.040975 * L1 / (1.0 + 0.01765 * L1);\n    var sc = 0.0638 * c1 / (1.0 + 0.0131 * c1) + 0.638;\n    var h1 = c1 < 0.000001 ? 0.0 : atan2$2(b1, a1) * 180.0 / PI$2;\n\n    while (h1 < 0) {\n      h1 += 360;\n    }\n\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n\n    var t = h1 >= 164.0 && h1 <= 345.0 ? 0.56 + abs$1(0.2 * cos$4(PI$2 * (h1 + 168.0) / 180.0)) : 0.36 + abs$1(0.4 * cos$4(PI$2 * (h1 + 35.0) / 180.0));\n    var c4 = c1 * c1 * c1 * c1;\n    var f = sqrt$4(c4 / (c4 + 1900.0));\n    var sh = sc * (f * t + 1.0 - f);\n    var delL = L1 - L2;\n    var delC = c1 - c2;\n    var delA = a1 - a2;\n    var delB = b1 - b2;\n    var dH2 = delA * delA + delB * delB - delC * delC;\n    var v1 = delL / (L * sl);\n    var v2 = delC / (C * sc);\n    var v3 = sh;\n    return sqrt$4(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));\n  }; // simple Euclidean distance\n\n\n  var distance = function distance(a, b, mode) {\n    if (mode === void 0) mode = 'lab'; // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n\n    return Math.sqrt(sum_sq);\n  };\n\n  var valid = function valid() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    try {\n      new (Function.prototype.bind.apply(Color_1, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }; // some pre-defined color scales:\n\n\n  var scales = {\n    cool: function cool() {\n      return scale([chroma_1.hsl(180, 1, .9), chroma_1.hsl(250, .7, .4)]);\n    },\n    hot: function hot() {\n      return scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n    }\n  };\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  }; // add lowercase aliases for case-insensitive matches\n\n  for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n    var key = list$1[i$1];\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n\n  var colorbrewer_1 = colorbrewer; // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n  // io --> convert colors\n  // operators --> modify existing Colors\n  // interpolators\n  // generators -- > create new colors\n\n  chroma_1.average = average;\n  chroma_1.bezier = bezier_1;\n  chroma_1.blend = blend_1;\n  chroma_1.cubehelix = cubehelix;\n  chroma_1.mix = chroma_1.interpolate = mix;\n  chroma_1.random = random_1;\n  chroma_1.scale = scale; // other utility methods\n\n  chroma_1.analyze = analyze_1.analyze;\n  chroma_1.contrast = contrast;\n  chroma_1.deltaE = deltaE;\n  chroma_1.distance = distance;\n  chroma_1.limits = analyze_1.limits;\n  chroma_1.valid = valid; // scale\n\n  chroma_1.scales = scales; // colors\n\n  chroma_1.colors = w3cx11_1;\n  chroma_1.brewer = colorbrewer_1;\n  var chroma_js = chroma_1;\n  return chroma_js;\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundWhite\":\"#F9F9F9\",\"Blue\":\"#647B98\",\"Orange\":\"#EFA748\",\"Font\":\"Roboto,sans-serif\"};"],"sourceRoot":""}