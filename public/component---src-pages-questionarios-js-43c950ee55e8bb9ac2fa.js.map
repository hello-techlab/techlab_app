{"version":3,"sources":["webpack:///./src/components/ListItem.js","webpack:///./src/components/FormApplication/header.js","webpack:///./src/components/FormSelection/FormSelectionList.js","webpack:///./src/pages/questionarios.js","webpack:///./src/styles/header.module.scss","webpack:///./src/images/terapia.jpg","webpack:///./src/components/FormSelection/ImageWithDescription.js"],"names":["StyledListItem","styled","button","Text","span","ListItem","nome","apelido","children","callback","context","descricao","key","onClick","IconBox","div","Title","h1","GoBackArrow","to","href","IconButton","fontSize","Header","title","lastPage","className","styles","header","left","right","defaultProps","FormSelectionList","useState","forms","setForms","useEffect","length","getForms","a","axios","get","headers","window","localStorage","getItem","response","data","status","navigate","listItems","map","form","index","Layout","FormSelectionPage","props","state","chatAPIAddr","process","description","changeDescription","setState","render","pageTitle","ImageWithDescription","this","text","apiAddr","React","Component","module","exports","ImageBox","TextBox","TextTitle","StyledImage","img","Overlay","src","terapia","style","color","marginTop"],"mappings":"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","file":"component---src-pages-questionarios-js-43c950ee55e8bb9ac2fa.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledListItem = styled.button`\n  width: 100%;\n  background-color: #fc9332;\n  height: 50px;\n  margin-top: 10px;\n  border: none;\n  border-radius: 0 30px 30px 0;\n  cursor: pointer;\n  box-sizing: border-box;\n  padding-left: 15px;\n  display: flex;\n  align-items: center;\n  color: white;\n  font-size: 18px;\n`\n\nconst Text = styled.span`\n  max-width: 430px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nconst ListItem = ({nome, apelido, children, callback, context, descricao }) => {\n  return (\n    <StyledListItem\n      key={apelido}\n      onClick={() => {\n        callback(context, apelido, descricao);\n        return null;\n      }}\n    >\n      <Text>{children}</Text>\n    </StyledListItem>\n  )\n}\n\nexport default ListItem\n","import PropTypes, { symbol } from \"prop-types\"\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport styles from \"../../styles/header.module.scss\"\n\nconst IconBox = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  font-family: Roboto;\n  font-size: 10;\n`\n\nconst GoBackArrow = ({ to }) => (\n  <IconBox>\n    <a href=\"/\">\n      <IconButton>\n        <ArrowBackIcon fontSize=\"large\" />\n      </IconButton>\n    </a>\n  </IconBox>\n)\n\nconst Header = ({ title, lastPage }) => (\n  <header className={styles.header}>\n    <div className={styles.header.left}>\n      <GoBackArrow to={lastPage} />\n    </div>\n    <div className={styles.header.right}>\n      <Title>{title}</Title>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  title: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  title: ``,\n}\n\nexport default styled(Header)``\n","import React, { useEffect, useState } from \"react\"\n\nimport ListItem from \"../ListItem\"\nimport axios from \"axios\"\nimport header from \"../FormApplication/header\"\nimport { navigate } from \"gatsby\"\n\nconst FormSelectionList = ({callback, context, ...props}) => {\n  const [forms, setForms] = useState([])\n  const chatAPIAddr = process.env.CHAT_API_ADDR\n\n  useEffect(() => {\n    if (forms.length === 0) {\n      getForms()\n    }\n  }, [])\n\n  const getForms = async () => {\n    try {\n      const response = await axios.get(\n        `http://${chatAPIAddr}/questionarios/lista`,\n        {headers: {'x-access-token': window.localStorage.getItem(\"TOKEN\")}})\n      const data = response.data\n      const statusCode = response.status\n      setForms(data)\n    }\n    catch (error) {\n      if (error.response.status == 401) {\n        navigate('/loginpage');\n        return;\n      } \n    }\n  }\n\n  const listItems = forms.map((form, index) => {\n    return (\n      <ListItem key={index} apelido={form.apelido} nome={form.nome} descricao={form.descricao} callback={callback} context={context}>\n        {form.nome}\n      </ListItem>\n    )\n  })\n\n  return <div>{listItems}</div>\n}\n\nexport default FormSelectionList\n","import FormSelectionList from \"../components/FormSelection/FormSelectionList\"\nimport ImageWithDescription from \"../components/FormSelection/ImageWithDescription\"\nimport React from \"react\"\nimport UiWrapper from \"../components/ui-wrapper\"\nimport styled from \"styled-components\"\n\nconst Layout = styled.div`\n  max-height: 100%;\n  height: 85%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-stretch;\n  margin: 0;\n`\n\nclass FormSelectionPage extends React.Component {\n    \n    constructor (props) {\n        super (props);\n\n        this.state = {\n            chatAPIAddr: process.env.CHAT_API_ADDR,\n            title: \"Questionários Sobre Saúde Mental\",\n            description: \"\"\n        }\n    }\n\n    changeDescription (context, apelido, descricao) {\n        context.setState({\n            title: apelido,\n            description: descricao \n        })\n    }\n\n    render () {\n        return (\n            <UiWrapper pageTitle=\"Questionários\" lastPage=\"/\">\n            <Layout>\n                <ImageWithDescription title={this.state.title} text={this.state.description}/>\n                <FormSelectionList apiAddr={this.state.chatAPIAddr} callback={this.changeDescription} context={this}/>\n            </Layout>\n            </UiWrapper>\n        )\n    }  \n}\n\nexport default FormSelectionPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackgroundWhite\":\"#F9F9F9\",\"MainBlue\":\"#72849d\",\"LightBlue\":\"#c6ceda\",\"MainOrange\":\"#f6aa41\",\"LightOrange\":\"#ffd874\",\"MainGrey\":\"#727376\",\"LightGrey\":\"#dcd6cd\",\"Font\":\"Roboto,sans-serif\",\"FontColorDark\":\"#212121\",\"FontColorLight\":\"#F9F9F9\",\"container\":\"header-module--container--2xPcW\",\"header\":\"header-module--header--1C-DW\",\"left\":\"header-module--left--3uKnB\",\"right\":\"header-module--right--1Jpce\"};","module.exports = __webpack_public_path__ + \"static/terapia-7921a8834731a4cbcf044399a5371680.jpg\";","import React from \"react\"\nimport styled from \"styled-components\"\nimport terapia from '../../images/terapia.jpg'\nimport { navigate } from \"@reach/router\"\n\nconst ImageBox = styled.div`\n  && {\n    position: relative;\n    min-height: 40%;\n    z-index: 1;\n    background-color: black;\n    background-image: url(\"terapia.jpg\");\n    background-position: center;\n    background-size: cover;\n  }\n`\n\nconst TextBox = styled.div`\n  && {\n    position: absolute;\n    top: 40%;\n    left: 20%;\n    right: 0;\n    bottom: 0;\n    width: auto;\n    height: auto;\n    background: rgba(65, 134, 148, 0.8);\n    box-sizing: border-box;\n    border-radius: 10px 0 0 0;\n    padding: 2%;\n    z-index: 3;\n  }\n`\n\nconst TextTitle = styled.span`\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n`\n\nconst StyledImage = styled.img`\n  max-width: 100%;\n  max-heigh: 50%;\n  height: 100%;\n  z-index: 1;\n`\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(236, 121, 15, 0.3);\n  z-index: 2;\n`\n\nconst ImageWithDescription = ({title, text}) => {\n  return (\n    <ImageBox onClick={() => {\n      if (title !== \"Questionários Sobre Saúde Mental\") {\n        navigate(`/formpage?form=${title}`)\n      }\n      return;\n    }}>\n      <Overlay />\n      <StyledImage src={terapia}></StyledImage>\n      <TextBox>\n        <TextTitle>{title}</TextTitle>\n        <div style={{color: \"white\", fontSize: \"0.8em\", marginTop: \"0.8em\"}}>\n          {text}\n        </div>\n      </TextBox>\n    </ImageBox>\n  )\n}\n\nexport default ImageWithDescription\n"],"sourceRoot":""}